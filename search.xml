<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>JAVA开发环境配置</title>
      <link href="/2018/04/21/JAVA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2018/04/21/JAVA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<p>内容概要：</p><ol><li>Windows环境下JAVA JDK的安装</li><li>解决javac问题</li><li>用记事本写hello world，并用控制台的方式运行起来<a id="more"></a></li></ol><hr><h1 id="Windows环境下JAVA-JDK的安装"><a href="#Windows环境下JAVA-JDK的安装" class="headerlink" title="Windows环境下JAVA JDK的安装"></a>Windows环境下JAVA JDK的安装</h1><h2 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a><font color="black" size="5"><strong>安装准备</strong></font></h2><h3 id="安装路径"><a href="#安装路径" class="headerlink" title="安装路径"></a><font color="black" size="4"><strong>安装路径</strong></font></h3><font color="black" size="4"><strong>一. JDK,JVM与JRE</strong></font><p><strong>JDK：Java Development Kit （java开发工具包）</strong></p><ul><li>环境的核心组件，提供编译、调试和运行一个Java程序所需的所有工具，可执行文件和二进制文件。</li><li>是程序员使用java语言编写java程序所需的开发工具包，是提供给开发人员使用的。</li><li>有针对Windows,Mac OS,Solaris,Linux系统的不同的安装包，目前(2018/04)JDK最新版号是1.8。</li></ul><p><strong>JVM：Java Virtual Machine（java虚拟机）</strong></p><ul><li>JVM是编程语言的核心。当运行一个java程序时，JVM负责将字节码转换为特定机器代码。</li><li>JVM是平台特定的，提供核心的Java方法，例如内存管理、垃圾回收、安装机制等。</li><li>JVM是可定制化的，可通过Java选项(java options)定制，比如配置JVM内存的上下界。</li><li>JVM提供了一个不依赖于底层操作系统和机器硬件的接口（“虚拟”），使Java独立于硬件和操作系统，可以一处编写多处执行。</li></ul><p><strong>JRE：Java Runtime Enviroment（java运行时环境）</strong></p><ul><li>JRE是JVM的实施实现，提供了运行Java程序的平台。包含JVM、Java二进制文件和JFC（Java Foundation Class,Java基础类库）。</li><li>JRE不包含任何Java编辑器、调试器之类的开发工具，如果只是要执行Java程序，安装JRE即可，无需安装JDK。</li></ul><font color="black" size="4"><strong>二. 安装路径配置</strong></font><ul><li>安装过程中会有两次安装路径选择，第一次安装jdk，第二次安装jre。为避免安装成功后出现无法使用某些命令(如常出现的javac无法使用)的情况，<font color="blue"><strong>jdk与jre安装在同一个java文件夹中的不同文件夹中</strong></font>。（不要轻视这一步，正确的安装路径会省去安装配置后很多不必要的问题。）</li><li>具体做法：在D盘（C盘或E盘都可以）中创建文件夹”Program-software”&gt;&gt;”JAVA”，在”JAVA”文件夹中创建两个文件夹：”jdk1.8”与”jre1.8”，分别安装jdk与jre。</li></ul><h3 id="确定系统类型"><a href="#确定系统类型" class="headerlink" title="确定系统类型"></a><font color="black" size="4"><strong>确定系统类型</strong></font></h3><ul><li>对于不同系统及系统不同的版本类型，有不同的安装包，因此在下载安装包前，需确定个人计算机的系统类型。</li><li>Windows10系统类型的具体查看路径：<code>控制面板&gt;系统和安全&gt;系统</code><br>本机是Windows10 64位操作系统<img src="https://i.imgur.com/lZHXJSB.png" alt=""></li></ul><h3 id="安装包下载"><a href="#安装包下载" class="headerlink" title="安装包下载"></a><font color="black" size="4"><strong>安装包下载</strong></font></h3><ol><li>访问官网下载：<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">Java SE开发工具包下载</a></li><li>根据本机的操作系统选择相应的安装包<br><img src="https://i.imgur.com/XMtWWhK.png" alt=""><br>我这里选择的是：<code>jdk-8u172-windows-x64.exe</code></li><li>下载前要先选择 <code>Accept License Agreement</code></li><li>注意区分：<br>Java SE Development Kit 8u172：Java SE开发包（配置Java开发环境的必须）<br>Java SE Development Kit 8u172 Demos and Samples Downloads：Java SE开发包+示例</li></ol><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a><font color="black" size="5"><strong>安装步骤</strong></font></h2><p>安装过程中会出现两次安装提示。第一次是安装jdk，第二次是安装jre。将jdk和jre分别安装在之前配置好的安装路径下。<br>jdk安装路径：<code>D:\Program_software\JAVA\jdk1.8</code><br>jre安装路径：<code>D:\Program_software\JAVA\jre1.8</code></p><ol><li>双击jdk-8u172-windows-x64.exe<br><img src="https://i.imgur.com/VctR0Cv.png" alt=""><br></li><li>点击“下一步”继续<br><img src="https://i.imgur.com/MG1bR1R.png" alt=""><br></li><li>选择安装路径，点击“下一步继续”。默认路径是C盘，根据自己之前设置的路径，我选择的路径是<code>D:\Program_software\JAVA\jdk1.8\</code><br><img src="https://i.imgur.com/WXj7Ddc.png" alt=""><br><img src="https://i.imgur.com/VpH8IRd.png" alt=""><br></li><li>等待安装<br><img src="https://i.imgur.com/AaGJmx4.png" alt=""><br></li><li>开始jre安装，默认路径是C盘<br><img src="https://i.imgur.com/0ySRHmF.png" alt=""><br></li><li>选择jre安装路径：<code>D:\Program_software\JAVA\jre1.8\</code><br><img src="https://i.imgur.com/Hlxebol.png" alt=""><br></li><li>等待安装<br><img src="https://i.imgur.com/CIoNCTy.png" alt=""><br></li><li>安装成功<br><img src="https://i.imgur.com/zMMLoFz.png" alt=""><br></li></ol><h2 id="配置系环境变量"><a href="#配置系环境变量" class="headerlink" title="配置系环境变量"></a><font color="black" size="5"><strong>配置系环境变量</strong></font></h2><p>Windows 10环境下，进入环境变量：右击“我的电脑”–&gt;“属性”–&gt;“高级系统设置”–&gt;“环境变量”。</p><ol><li><p>配置JAVA_HOME环境变量</p><ul><li>作用：指向jdk的安装目录，Eclipse/NetBeans/Tomcat等软件就是通过搜索JAVA_HOME变量来找到并使用安装好的jdk。</li><li>配置方法：在系统变量里点击新建，变量名填写JAVA_HOME，变量值填写JDK的安装路径。（根据自己的安装路径填写，本机为<code>D:\Program_software\JAVA\jdk1.8</code>）</li><li><strong>注意</strong>：JAVA_HOME环境变量指向jdk安装路径，而不是jre安装路径。<br><img src="https://i.imgur.com/Ca0aXA9.png" alt=""><br></li></ul></li><li><p>配置classpath环境变量</p><ul><li>作用：指定类搜索路径。要使用已经编写好的类，前提是能够找到它们。JVM就是通过classpath来寻找类。我们需要把jdk安装目录下的lib子目录中的dt.jar和tools.jar设置到CLASSPATH中，当前目录“.”也必须加入到该变量中。</li><li>配置方法：新建classpath变量，变量值为<code>.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;</code>。classpath变量名字，大小写均可。<strong>注意不要忘记前面的点和中间的分号，且使用英文输入下的分号和逗号</strong>。<br><img src="https://i.imgur.com/gUlD3md.png" alt=""><br></li></ul></li><li><p>配置path环境变量</p><ul><li>作用：指定命令搜索路径。在i命令行下面执行命令如javac编译java程序时，它会到path变量所指定的路径中查找看是否能找到相应的命令程序。</li><li>jdk安装目录下的bin目录中包含经常要用到的可执行文件如javac/java/javadoc等，所以需要把jdk安装目录下的bin目录增加到现有的path变量中设置好PATH变量后，就可以在任何目录下执行javac/java等工具。</li><li>配置方法：在系统变量里找到Path变量（系统自带的，不用新建）。双击Path，由于原来的变量值已经存在，故应在已有的变量后加上<code>;%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin</code>,<strong>注意前面的分号</strong>。<br><img src="https://i.imgur.com/ovYjIIp.png" alt=""><br></li></ul></li></ol><h2 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h2><ol><li>检验是否配置成功，运行cmd，分别输入<code>java</code>,<code>java -version</code>,<code>javac</code>三条命令查看。<ul><li>输入<code>java</code>:显示java命令的用法<br><img src="https://i.imgur.com/Zs8YJYi.png" alt=""></li><li>输入<code>java -version</code>:显示当前安装的java版本<br><img src="https://i.imgur.com/os1HuKs.png" alt=""></li><li>输入<code>javac</code>：显示javac命令的用法<blockquote><p>javac是收录于JDK中的Java语言编译器。 该工具可以将后缀名为.java的源文件编译为后缀名为.class的可以运行于Java虚拟机的字节码。(维基百科)</p></blockquote></li></ul></li></ol><p><img src="https://i.imgur.com/VblXyKO.png" alt=""><br></p><ol start="2"><li>也可以在命令行输入<code>echo %JAVA_HOME%</code>检查配置路径是否正确</li></ol><p><img src="https://i.imgur.com/oEhFfgX.png" alt=""> <br></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ol><li><p>jdk与jre的安装路径：jdk与jre安装在同一个java文件夹中的不同文件夹中。</p></li><li><p>配置环境变量（以我个人计算机为例）：<br>JAVA_HOME: <code>D:\Program_software\JAVA\jdk1.8</code><br>classpath: <code>.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;</code><br>path: <code>;%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin</code></p></li></ol><hr><h1 id="解决javac命令无效的两种情况"><a href="#解决javac命令无效的两种情况" class="headerlink" title="解决javac命令无效的两种情况"></a>解决<code>javac</code>命令无效的两种情况</h1><h2 id="‘javac’不是内部或外部命令"><a href="#‘javac’不是内部或外部命令" class="headerlink" title="‘javac’不是内部或外部命令"></a><font color="black" size="5">‘javac’不是内部或外部命令</font></h2><ul><li>问题表现：当测试环境是否成功配置时，常出现该种情况：输入命令<code>java</code>和<code>java -version</code>时显示正常，但输入命令<code>javac</code>时，会出现提示：<code>&#39;javac&#39;不是内部或外部命令，也不是可运行的程序或批处理文件</code><br><img src="https://i.imgur.com/oj4CfPM.png" alt=""></li><li>出现原因与解决方法：</li></ul><ol><li>环境变量配置有误：<br>检查环境变量是否正确配置，可通过输入命令<code>echo %JAVA_HOME%</code>来查看。<br><img src="https://i.imgur.com/kXDSzFy.png" alt=""><br>按照正确的jdk安装路径，应是<code>D:\Program_software\JAVA\jdk1.8</code>，故此处环境变量配置错误。<br>同样，可输入<code>echo %classpath%</code>,<code>echo %path%</code>分别检查classpath和path环境变量是否正确配置。在这里，<code>echo</code>命令会显示环境变量的绝对路径，而不是设置环境变量时输入的以<code>;%JAVA_HOME%\</code>开头的路径。<br>除了环境变量的路径配置有误，也可能是填写不规范造成的，如在classpath环境变量中，忘记在最前面加上<code>.;</code>。<br>有些系统的path环境变量需要用jdk的绝对路径，而不能用%JAVA_HOME%这类路径。这时候需要在path环境变量中填写完整的路径，即将<code>%JAVA_HOME%</code>替换成jdk的安装路径。<br>修改完环境变量后，需重新启动cmd窗口进行环境测试。</li><li>JDK安装不当<br>在安装前配置好jdk和jre的安装路径，就是避免该种情况发生：因为安装jdk的过程中也在安装jre，jre安装包中又包含几个与jdk安装包中相同的文件，<strong>比如javac</strong>，若将jdk与jre安装在同一目录下，就会产生冲突，jre自动覆盖jdk某些文件，导致在jdk的安装路径下缺少这些文件，相应的命令语句也就输入无效。</li></ol><h2 id="找不到或无法加载主类"><a href="#找不到或无法加载主类" class="headerlink" title="找不到或无法加载主类"></a><font color="black" size="5"><strong>找不到或无法加载主类</strong></font></h2><ul><li><p>问题表现<br>安装JDK并配置好环境变量后，输入java与java -version都能正确提示，但输入javac并回车却显示：</p><blockquote><font color="red"><strong>错误：找不到或无法加载主类  com.sun.tools.javac.Main</strong></font></blockquote></li><li><p>出现原因<br>JDK安装不当（同前面所述）：安装JDK时将jre安装在同一目录下了。因为安装过程会有两次选择安装目录，若设置为同一目录，便会导致此问题。</p></li><li><p>解决方法</p><ol><li>使用软件管家卸载JDK，并清除残留<br><img src="https://i.imgur.com/3MXK0MW.png" alt=""></li><li>按照本文开篇“安装路径配置”正确配置jdk与jre的安装路径</li><li>重新下载安装jdk，配置环境变量</li><li>测试环境</li></ol></li></ul><hr><h1 id="用记事本写hello-world，并用控制台的方式运行起来"><a href="#用记事本写hello-world，并用控制台的方式运行起来" class="headerlink" title="用记事本写hello world，并用控制台的方式运行起来"></a><font size="4"><strong>用记事本写hello world，并用控制台的方式运行起来</strong></font></h1><ol><li>新建记事本，重命名为“HelloWorld.java”。（如何更改文件扩展名，百度一下或google一下你就知道）</li><li>右键点击，选择“编辑”。</li><li><p>编写代码,保存后退出。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//public :表示这个类是公共的，一个java文件中只能有一个public类  </span><br><span class="line">//class:表示这是一个类  </span><br><span class="line">//HelloWorld：类名（公共类的类名必须和文件名一致）  </span><br><span class="line">public class HelloWorld  </span><br><span class="line">&#123;  </span><br><span class="line">    //一个主函数，相当于是程序的入口  </span><br><span class="line">    public static void main(String args[])  </span><br><span class="line">    &#123;  </span><br><span class="line">        System.out.println(&quot;你好，世界&quot;);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>打开cmd窗口，进入该文件所在目录，我这里是<code>D:\practive\</code><br><img src="https://i.imgur.com/wb1MMBZ.png" alt=""></p></li><li>输入命令<code>javac HelloWorld.java</code>运行java文件。<br><img src="https://i.imgur.com/jC3FiFB.png" alt=""><br>如果运行成功，会在当前路径下生成HelloWorld.class文件<br><img src="https://i.imgur.com/nbmvGnX.png" alt=""></li><li>输入命令<code>java HelloWorld</code>进行编译，不需加任何后缀。<br>如果编译成功，则会在命令行中输出<code>你好，世界！</code><br><img src="https://i.imgur.com/Vnx3cXn.png" alt=""></li><li><strong>注意</strong>：公共类的类名必须和文件名一致，否则出错。<br><img src="https://i.imgur.com/9SqVXZ3.png" alt=""></li><li>java源文件的编译运行简述<ul><li>编译：<code>javac</code>命令利用<strong>java编译器</strong>即<code>javac.exe</code>将后缀名为<code>.java</code>的java源文件<strong>编译</strong>为后缀名为<code>.class</code>的可以运行于java虚拟机的字节码文件。</li><li>运行：java字节码文件<code>.class</code>文件由<strong>解释执行器</strong>即<code>java.exe</code>将字节码文件加载到<strong>java虚拟机</strong><code>jvm</code>。字节码文件<code>.class</code>就会在java虚拟机中执行 </li></ul></li></ol>]]></content>
      
      <categories>
          
          <category> JAVA学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
